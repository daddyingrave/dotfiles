set $mod Mod4

# mouse+$mod to drag floating windows 
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty 

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (rofi)
bindsym $mod+d exec rofi -show drun 
bindsym $mod+Tab exec rofi -show window 

# change focus
bindsym $mod+h focus left
bindsym $mod+l focus right 
bindsym $mod+j focus down
bindsym $mod+k focus up

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Ctrl+h split h
# split in vertical orientation
bindsym $mod+Ctrl+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+Shift+a focus child

bindsym $mod+Shift+a focus child

# Screenshots
bindsym $mod+Shift+s --release exec flameshot gui

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+shift+1 move container to workspace number $ws1
bindsym $mod+shift+2 move container to workspace number $ws2
bindsym $mod+shift+3 move container to workspace number $ws3
bindsym $mod+shift+4 move container to workspace number $ws4
bindsym $mod+shift+5 move container to workspace number $ws5
bindsym $mod+shift+6 move container to workspace number $ws6
bindsym $mod+shift+7 move container to workspace number $ws7
bindsym $mod+shift+8 move container to workspace number $ws8
bindsym $mod+shift+9 move container to workspace number $ws9
bindsym $mod+shift+0 move container to workspace number $ws10

# workspaces assignments
workspace "1" output {{ .display.output_1 }} 
workspace "2" output {{ .display.output_1 }}
workspace "3" output {{ .display.output_1 }} 
workspace "4" output {{ .display.output_1 }}
workspace "5" output {{ .display.output_2 }} 
workspace "6" output {{ .display.output_2 }}
workspace "7" output {{ .display.output_2 }} 
workspace "8" output {{ .display.output_2 }} 
workspace "9" output {{ .display.output_2 }} 
workspace "10" output {{ .display.output_2 }} 

# Windows assignments
assign [class="Firefox"] $ws1
assign [class="Telegram"] $ws6
assign [class="Spotify"] $ws10

# Windows modifications
for_window [class="Firefox"] move container to workspace $ws1
for_window [instance="open.spotify.com"] move container to workspace $ws10
for_window [class="Telegram"] floating enable
for_window [class="Telegram"] move position 3855 65 
for_window [class="Telegram"] resize set 1895 2070
for_window [class="jetbrains-toolbox"] floating enable
for_window [class="jetbrains-toolbox"] move scratchpad
for_window [class="Blueman-manager"] floating enable
for_window [class="Blueman-manager"] move scratchpad

# reload the configuration file
bindsym $mod+Shift+w reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         status_command i3status
#         font pango:Noto Sans 11
# }


bar {
    font pango: NotoMono Nerd Font, Font Awesome 5 Free 12
    position top
    status_command /usr/bin/i3status-rs ~/.config/i3status-rust/config.toml
    colors {
        separator #666666
        background #222222
        statusline #dddddd
        focused_workspace #0088CC #0088CC #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
    tray_output none 
}

# My bindings
# Scratchpad management
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# Pulse Audio controls
# increase sound volume
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
#decrease sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
# mute sound
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause 
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next 
bindsym XF86AudioPrev exec playerctl previous

# Autostart applications
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id nitrogen --restore; sleep 1; picom --experimental-backends
exec --no-startup-id dunst
exec --no-startup-id flameshot
exec --no-startup-id blueman-manager
exec --no-startup-id flatpak run com.spotify.Client 
exec --no-startup-id ~/Apps/Telegram/Telegram 
exec --no-startup-id ~/.local/share/JetBrains/Toolbox/bin/jetbrains-toolbox 
exec --no-startup-id i3-msg 'workspace 10; exec google-chrome --app=https://open.spotify.com'

# Keyboard layout
exec --no-startup-id "setxkbmap -layout us,ru -option 'grp:alt_shift_toggle'"
exec --no-startup-id kbdd

default_floating_border none
smart_borders no_gaps
hide_edge_borders smart_no_gaps

# Gaps
gaps inner 10
gaps outer -4
smart_gaps on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Visual 
font pango: Noto Sans 10
title_align center
new_window pixel 4

# Colors from ~/.Xresources
set_from_resource	  $background	background
set_from_resource	  $foreground	foreground
set_from_resource	  $color0		color0
set_from_resource 	$color1 	color1
set_from_resource 	$color2 	color2
set_from_resource 	$color3 	color3
set_from_resource 	$color4 	color4
set_from_resource 	$color5 	color5
set_from_resource 	$color6		color6
set_from_resource	  $color7		color7
set_from_resource	  $color8		color8
set_from_resource	  $color9		color9
set_from_resource	  $color10	color10
set_from_resource	  $color11	color11
set_from_resource	  $color12	color12
set_from_resource	  $color13	color13
set_from_resource	  $color14	color14
set_from_resource	  $color15	color15

# class                 border  	  backgr. 	  text    	  indic.  	  child_border
client.focused         	$color4	    $color0	    $foreground	$color4		  $color4	
client.unfocused       	$color0	    $color0     $foreground	$background	$background
client.focused_inactive	$foreground	$background	$foreground	$background	$background
client.urgent		        $foreground	$background	$foreground	$background	$background
client.placeholder	    $foreground	$background	$foreground	$background	$background

client.background	$background

